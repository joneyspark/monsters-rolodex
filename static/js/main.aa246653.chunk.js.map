{"version":3,"sources":["components/card-list/Card.component.jsx","components/card-list/card-list.component.jsx","components/card-list/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","console","log","map","SearchBox","placeholder","handleChange","type","onChange","App","state","monsters","searchField","fetch","then","response","json","users","setState","catch","error","this","filterMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCJhBC,EAAW,SAAAR,GAMrB,OAJAS,QAAQC,IAAIV,EAAMG,SAKd,qBAAKF,UAAU,YAAf,SAGQD,EAAMG,QAENH,EAAMG,QAAQQ,KAAI,SAAAR,GAAO,OACrB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,OAGvB,+CChBHQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAC,KAAK,SACLF,YAAaA,EACbZ,UAAU,SACVe,SAAUF,MC8BCG,E,kDAlCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXC,SAAU,GACVC,YAAa,IALJ,E,qDASb,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEP,SAAUM,OACxCE,OAAM,SAAAC,GAAK,OAAInB,QAAQC,IAAIkB,Q,oBAG9B,WAAS,IAAD,SAC4BC,KAAKX,MAA/BC,EADF,EACEA,SAAUC,EADZ,EACYA,YACZU,EAAiBX,EAASY,QAAQ,SAAA5B,GAAO,OAAIA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBACnG,OACE,sBAAK/B,UAAU,MAAf,UACE,kDAGA,cAAC,EAAD,CACAY,YAAY,iBACZC,aAAc,SAAAoB,GAAC,OAAI,EAAKR,SAAS,CAAEN,YAAac,EAAEC,OAAOC,WAEzD,cAAC,EAAD,CAAUjC,QAAW2B,W,GA7BXO,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aa246653.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './card-list-styles.css'\r\nimport { Card } from './Card.component'\r\n\r\nexport  const CardList = props => {\r\n    \r\n    console.log(props.monster)\r\n    \r\n  \r\n    \r\n    return (\r\n        <div className=\"card-list\">\r\n\r\n            {\r\n                props.monster\r\n                ? \r\n                props.monster.map(monster => (\r\n                    <Card key={monster.id} monster={monster} />\r\n                ))\r\n                :\r\n                <h1>Loading...</h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n    type=\"search\" \r\n    placeholder={placeholder} \r\n    className=\"search\" \r\n    onChange={handleChange} />\r\n)\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/card-list/search-box.component';\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users }))\n    .catch(error => console.log(error))\n  }\n\n  render(){\n    const { monsters, searchField } = this.state\n    const filterMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return(\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        {/* <input type=\"search\" placeholder=\"Search monsters..\" \n        onChange={e => this.setState({ searchField: e.target.value }) } /> */}\n        <SearchBox \n        placeholder=\"Search Monster\"\n        handleChange={e => this.setState({ searchField: e.target.value }) }\n         />\n        <CardList monster = {filterMonsters}></CardList>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}